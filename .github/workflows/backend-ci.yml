# Backend CI workflow for ERP Final
# Tests Python code, runs linting, and validates Docker build

name: Backend CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  FLASK_ENV: testing

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements*.txt
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
        
    - name: Run tests with pytest
      env:
        FLASK_ENV: testing
      run: |
        python -m pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml --cov-report=term || true
        
    - name: Build Docker image
      run: |
        docker build -t erp-final-test .
        
    - name: Upload pytest junit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-junit-${{ matrix.python-version }}
        path: junit.xml
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-${{ matrix.python-version }}
        path: coverage.xml
