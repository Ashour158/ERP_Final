# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v5
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements*.txt
          pyproject.toml
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install black isort flake8 bandit pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
    - name: Format and lint checks
      run: |
        black --check .
        isort --check-only .
        flake8 .
    - name: Security scan with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
    - name: Test with pytest
      run: |
        pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'
      with:
        name: coverage-report
        path: coverage.xml
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.11'
      with:
        name: bandit-report
        path: bandit-report.json